# Generated by Django 5.1.3 on 2024-11-25 16:53

import django.db.models.deletion
import retinadeepai.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='RetinaAnalysisTask',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(choices=[(1, 'Not Started'), (2, 'Processed'), (3, 'Success'), (4, 'Error')], default=1)),
                ('status_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Задача анализа сетчатки',
                'verbose_name_plural': 'Задачи анализа сетчатки',
            },
        ),
        migrations.CreateModel(
            name='RetinaDetectionTask',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('detection_cover', models.ImageField(blank=True, null=True, upload_to=retinadeepai.models.retina_detection_cover_upload)),
                ('status', models.IntegerField(choices=[(1, 'Not Started'), (2, 'Processed'), (3, 'Success'), (4, 'Error')], default=1)),
                ('status_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Задача детекции фрагментов сетчатки на изображении',
                'verbose_name_plural': 'Задачи детекции фрагментов сетчатки на изображении',
            },
        ),
        migrations.CreateModel(
            name='RetinaFileUpload',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_orig', models.FileField(blank=True, null=True, upload_to=retinadeepai.models.retina_file_upload)),
                ('image', models.ImageField(blank=True, null=True, upload_to=retinadeepai.models.retina_image_upload)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=retinadeepai.models.retina_thumbnail_upload)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('ext', models.CharField(blank=True, max_length=16, null=True)),
                ('is_example', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Загруженный файл сетчатки для распознавания',
                'verbose_name_plural': 'Загруженные файлы сетчатки для распознавания',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='RetinaImageCropTypeOCT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('label', models.CharField(blank=True, max_length=256)),
                ('description', models.CharField(blank=True, max_length=512)),
                ('model_code', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Тип среза DICOM изображения сетчатки',
                'verbose_name_plural': 'Типы срезов DICOM изображений сетчатки',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RetinaLabelGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('sort_index', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Категория группы признаков описания сетчатки',
                'verbose_name_plural': 'Категория групп признаков описания сетчатки',
                'ordering': ['sort_index'],
            },
        ),
        migrations.CreateModel(
            name='RetinaAnalysisCropTask',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('task_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retinadeepai.retinaanalysistask')),
            ],
            options={
                'verbose_name': 'Задача анализа среза сетчатки',
                'verbose_name_plural': 'Задачи анализа среза сетчатки',
            },
        ),
        migrations.AddField(
            model_name='retinaanalysistask',
            name='task_detection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retinadeepai.retinadetectiontask'),
        ),
        migrations.AddField(
            model_name='retinadetectiontask',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retinadeepai.retinafileupload'),
        ),
        migrations.CreateModel(
            name='RetinaImageCropOCT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to=retinadeepai.models.retina_crop_oct_upload)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=retinadeepai.models.retina_crop_oct_thumbnail_upload)),
                ('confidence', models.FloatField(blank=True, null=True)),
                ('task_detection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='retinadeepai.retinadetectiontask')),
                ('type_oct', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='retinadeepai.retinaimagecroptypeoct')),
            ],
            options={
                'verbose_name': 'Срез DICOM изображения',
                'verbose_name_plural': 'Срезы DICOM изображения',
            },
        ),
        migrations.AddField(
            model_name='retinaanalysistask',
            name='crops',
            field=models.ManyToManyField(through='retinadeepai.RetinaAnalysisCropTask', to='retinadeepai.retinaimagecropoct'),
        ),
        migrations.AddField(
            model_name='retinaanalysiscroptask',
            name='crop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retinadeepai.retinaimagecropoct'),
        ),
        migrations.CreateModel(
            name='RetinaLabelMark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(db_index=True, max_length=32, unique=True)),
                ('name', models.CharField(max_length=256)),
                ('sort_index', models.IntegerField()),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retinadeepai.retinalabelgroup')),
            ],
            options={
                'verbose_name': 'Метка сетчатки глаза',
                'verbose_name_plural': 'Метки сетчатки глаза',
            },
        ),
        migrations.CreateModel(
            name='RetinaAnalysisResult',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(choices=[(1, 'Not Started'), (2, 'Processed'), (3, 'Success'), (4, 'Error')], default=1)),
                ('status_update', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=retinadeepai.models.retina_analysis_crop_image_upload)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=retinadeepai.models.retina_analysis_crop_thumbnail_upload)),
                ('score', models.FloatField(blank=True, null=True)),
                ('retina_analysis_crop_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retinadeepai.retinaanalysiscroptask')),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retinadeepai.retinalabelmark')),
            ],
            options={
                'verbose_name': 'Результат анализа среза по метке с изображением',
                'verbose_name_plural': 'Результаты анализа среза по метке с изображением',
            },
        ),
    ]
